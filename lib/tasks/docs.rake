def strip_json(json)
  json.each do |action_name, actions|
    actions.each do |action_data|
      if action_data['response_data'].is_a?(Array) && action_data['response_data'].size > 5
        # to make docs more readable, because content with more thn 5 items is too long
        action_data['response_data'] = action_data['response_data'].first(5)
      end
    end
  end
  json
end

def remove_base64(content)
  # to make docs more readable, because base64 string is too long
  base64_string_to_remove = 'data%3Aimage%2Fjpeg%3Bbase64%2C%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJ%0AChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj%2F%0A2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo%0AKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj%2FwgARCACAAIADASIAAhEBAxEB%2F8QA%0AGwAAAgMBAQEAAAAAAAAAAAAAAAUDBAYCAQf%2FxAAZAQADAQEBAAAAAAAAAAAA%0AAAAAAwQCBQH%2F2gAMAwEAAhADEAAAAfqgAAAAAAAAAAAAAAAAAALvcsY8mNl0%0AMChdtOnnwptH0aT5uyXRthW0RcAebAQaXXQ9%2B28R71OtVdX0uQvtV5HZM5o1%0ANHa89x71Tzub6GZ%2FQRdwwuvwTobpMNlfK2dPFiZkvcUScDMnsqzWVa9piYfz%0A4d3853SqkuW1%2BIbNpe1zzO4nyPldEy5xZZnNe6fzWUujp0kvoxXM42KPUZx4%0ADTF%2FS00%2FQyN9O7q5TG1n7aqnHuckPX%2FGZi1jRq11fc8LCDraoNX3oJOxLXsC%0AbE%2Bb3irSsgyfIGT0bnPmlL%2FLM%2BlQqdDocuyul7apsr2Ay0AAAAjkAIpQIpQC%0AOQAAAAA%2F%2F8QALBAAAgICAQMBBwQDAAAAAAAAAgMBBAAREgUTFBAgISIjMDIz%0AFSQxNEBBUP%2FaAAgBAQABBQL%2FAIpGI4VtMZ56c%2FUE4NxE4JiX0X21qxl1rJio%0A9mT08sdWYr1jcYq85eVrq3e1cuyU501ccLtggKLDYlJd1LKTOfhOwqrhzWTG%0AUr0hPr1R8iMRms6d%2BC%2F%2FAGMXZNYea3PNbibkydxEMXrJHcdKfJD6PLu3NZrO%0An%2Fgv%2FwBjF1CYHgnngniaXErboENZrEF2ruWmdpFctlrNZ0%2Bfl9RCe5lW1Cw8%0AtOeWnBap2WavCNZrHFplRndR1dnwzHZaHvHWKKVnEg8G0ijJUcZqc1OV0sJj%0A5iFaxk8RkecdLZ868jkx5cnqKUGMC2CCRyPdg2DjItZ5Q55Q5NrCljpbwTFl%0AhOGpPJXRQ2PUSmAWmfIaXKyreLslEd1JZxTOdoM7QZMIHCsoDG3mMxslyqxy%0Aq1YOD6QMwZDBZfEQgfuV8KkTsBjcCW4HZFJzy3MzbDtNVOnX41ZpFwLpKY7Y%0AgI%2BjlQ0TohIWR7FdbIGBn9uv%2BEfnP8%2F%2B%2Bp%2FfETtgeRYXRCASqFD7D6kNYdNZ%0AQ4JVHhO0IMQyEG4vBbqAmwxdNYwqpC2%2FQkBmcMIOACAjIAYn%2FF%2F%2FxAApEQAB%0AAwMCBAYDAAAAAAAAAAACAAEDBBESEyEFFCJBECMwMTJRUnGh%2F9oACAEDAQE%2F%0AAfRImBrkuby2ja6kqKgd3FNxCT6QcQF%2FkyAxNrj4SyNGOTqQyle5J306dsVT%0A1GD9b7Jxpn%2B09KBjlE6jMonyFRSNIOTKuPcQWKla9OygYHLzFpU%2F3%2FUTYB5K%0AxVCfyBcQHE8lH1%2FtAbhs6eGIvZ7Llg%2FJBjENh3UpMDW7qiHrZ2dVEASNd0Ak%0AxdaCUrLWZ%2ByepbsKkqZL4eyijLVdlTU4gIv38JY9QcUdNZuhcoYpqE33TUIm%0ATmajj07%2Bl%2F%2FEACYRAAIBAwMDBAMAAAAAAAAAAAABAgMREhMhMRAiMARBUWEU%0AMjP%2F2gAIAQIBAT8B8KTfBpW%2FZkYU37mhEfp37DTXPSMcnYilHggsqu5VpZLt%0ALVTOUXaZJKWzJRxdiguWXKX9Srkl2mpW%2BC7lLvLldcMoO6sS2Gr7irTXJ%2BQ%2F%0Agm3Ud2QWRWe1inUcdhtW2HFGH2af2Rpxtck1hcqVG2%2BkZYu4ql%2BTVTNZI12l%0AaJKWXi%2F%2FxAAtEAACAQIFAgQHAAMAAAAAAAAAAQIRIQMQEjFBMlEiYXGBICMw%0AM0KRoRNAUP%2FaAAgBAQAGPwL%2FAIt2kdZuzd%2Fo60eFp%2FRpvLsUhb0KzdPU%2B4jx%0AK3dZ%2BFtF%2FGvMp0y7P4nDBduZZPE52NELeZ1sTa3HoXh4udP9Lweaw8d24l8C%0AwodUt%2FTP3PbJRjSiPxPxEsRK%2FYcvyWbwZ9UdvTPEl7LP3PbJSTVzqidUSs5V%0AoOKvJ54cu9nlKQ85R8xS4eWiasb%2FAMOr%2BGlS9tjVDbOJF87M0kVzyVy1Ip%2FD%0A5fiReEv0bGxGiaS5JV7ZVP8ALwOPE1qFJ7EmaX%2BjwO%2FZl0WL3LxNmdLLRO58%0Ax37IcvwRi4fuhy7WLIhXlkix3XmeKNPQtOh9xH3UXxKnhjX1NMLeg9W5jRNU%0AeDFfEuC4p9ir5MSXlQRN9llRDQihB%2BYyWrpkiTfcssqMoiWHy2JOxitZRJ%2Bu%0AUHlh05VyjKL4dTNiWDGPVyWZGeJXSSlDZsuQjJU0mxqX0atZUZRZVS%2F1v%2F%2FE%0AACYQAQACAQQCAgICAwAAAAAAAAEAESExQVFhEHGBkSCxMPBAUKH%2F2gAIAQEA%0AAT8h%2FwBKB94zUQ%2BolufEOEjRS94gtidP8NzbqTeE0NcxhvytlPCPZA7v9wlS%0Ao1tDkZVXOHV9xMv%2BLaSsMcBv6jbrDqLvTqcHVsX6z3mUHY5Nph622NJ0vpBL%0A%2BFT%2BooaRGWy6k8Lt7mvl0q1XEUleAz95reng4u4To%2Bk6PpBShVeyBIA7Hnwx%0ADHVvVO%2FlxEP1eQZe81vTwd2cp%2FeZ%2FeYB5lYBF%2FBVjbycRL4nxmDNUe57m35A%0A5BaEp4K%2BfBVFNEnZ%2B07H2gGVfZSyZd47eQBdy8XH7CZxaomSNBCqGngO%2BU5j%0A9UjqtSNquhwxvEjufU7n1FJUtRUR9KjwB1pGW2DVSnh17m3cxO4mrvlS%2BVRJ%0AZiWVqnkm3j3B3fh8uOPf7ZmI8A0Ir5sw5KSqNpdOtSpFy7k1tWVKeWrGW3uX%0AP2lWU4oNSvmN2%2B0v0lXrH9FJr64c07gIUTaQN4EZSPh7mg2iNA3BYU2%2FULff%0AR9PCxPEtTmmWGUjZYVLpiUC9WVF7EnVBntuZsxUZRG7deptt42JyrlMzHeKd%0AQjGhUG2EwTGP3f14DQPcF8wiAhpBxf8AwSjls2J%2FiE2JXcIrxFZwlRUl6Ia0%0AQ6nImY2jt6aXmbuMWfw1aFypX2yV9olStC%2F8b%2F%2FaAAwDAQACAAMAAAAQ8888%0A8888840Nty%2F88EZKvku0vWNDNnqblKDZlGambfPJU%2F398f5DXYH888scsc88%0A%2F8QAJhEBAAIBAgUEAwEAAAAAAAAAAQARITFBEGFxobGBkdHwMFHhwf%2FaAAgB%0AAwEBPxD8N8KIpq%2FCA4J7%2BGA1D96xyqumZaqzgj2pfb%2BRtHuu8RLFHXMQW%2ByI%0AENbMsrns9YL3ofMt%2FHBgG1fEomiu85aBWgjq3fAV82%2FmJZbXTlHStmpLkrHa%0AP2nJr9959p%2FYXOpjrV%2BnzLqopfWsPmKTyf5FyEXPprFDfrCtiweh3jLml01G%0AFFqx7ymuGfVM8DZNXBu9npUKKIhULshed78S8HLpDAG7b%2FF%2F%2F8QAHxEAAwAC%0AAgMBAQAAAAAAAAAAAAERITEQQTBR8GGB%2F9oACAECAQE%2FEPC1iEJYDWLIfU2K%0Ab0exJw5CCSBTt4TISYlKYGrRL6EIOcw2fx4NGvY1u58EQLzwbBxJYMt6FYnk%0AxKJnzYmJiQxr0SdloZQ8DmW9CzZSCd7HtJM00LbrmFxyl7HjSjRE6Pzxf%2F%2FE%0AACkQAQACAQIEBwEBAAMAAAAAAAEAESExYUFRgaEQcZGxwdHw8SAwQFD%2F2gAI%0AAQEAAT8Q%2FwDE0l%2BI2CPol5n2jVdA4hp80ozSHK%2Fum9CCZr%2FtxrHME4unm8Jn%0A5fQrXXWc5mz%2Bgfcz3Kih8zlKF38OvijyvRQx0CPyHzcvxfZXydGGf8KBVoJY%0AQFhnZs3gRUq63DAK0TQBdedwCw6Urc8CVHmWmJ6MF8imutRPLEJlzsg8nGIC%0AjbH3Symb19ExUAYRKSDXUTImoxCrrTK4D5b%2BsEAjY%2BLrwKWuh309YJA0nRKP%0A1YIJlR%2BG6rFyrz3n9H9z%2Bj%2B4aWAvLPMVjUSlMgMjzxOiGwXZFYjHWafbT08F%0AoWKu3rzhh729fEo%2FRggmVCp0oWszXLafp%2Bk%2FT9INyhRhTS34jxxMV1cK77eI%0ApeNabHvTBsGDgl3mv19IBltTLfxFWOG7IfTBfhb8guPR7MqWRqp7wt0nms%2FW%0AfE%2FSfEZAYzZHsvSAJHnndfE8S2WQlecyID259desouK%2Fq%2FzvLAta2LqQM%2FXE%0A8GUBMJoOUH4T9juQc3BYH4f2JUkd1P7KX6eqhpItAA8ObFQAAPFSg8GEcGrM%0Ax%2FkxIgTZFHAKH1HtAbmciahmu0JmVqQ7SUNYQ4N9Ur0eMXDu5Kdx6JSQ4PLl%0APqRZhPm%2FE%2FWfca8WdPuDa7d8YQEgGhqC4qMNb1eEGFXdKC%2BsVh%2BJVBd4orPz%0AClzSpvWe0GLBVOWX2i2uMJSjbB8gQxpnRc1zOqYh6LDNdT3qPspUAtdhh7U9%0AFYh0RNHVy7oMjGfnoFH6gFa2RWBokZ4tRyJee8GAQc4Y8Awc0fMKIlrmC%2Fyz%0Au5%2BIizLaAowA82%2FqKCJZ7okUzbYUR4DvK7VhLX0seswUoJFOKk1OHUfjrAHd%0AQnR8x1StrR4MRh4UTDEz9WzKgrvco7WlLGiomgiwb4LNLsTuPcnc4uzB7yt8%0A0vaLitD6RPazAbXWj1xKZVMsIj%2Fkv2rJBVKDUlMpYeSoVRUurg8LuociQ5Ng%0AszUGaoF1cf2C5u4Ve0odUNWPXQun%2FCBQOikAFBiPBwODghKTEQgPVr%2Frf%2F%2FZ%0A'
  content.gsub(base64_string_to_remove, 'BASE64_FILE') # TODO do with regular expression
end

namespace :docs do
  task update: [:environment] do
    Kernel.system('RAILS_ENV=test APIPIE_RECORD=examples rspec')
    begin
      docs_path = Rails.root.join('doc', 'apipie_examples.json')
      content = remove_base64(File.new(docs_path).read)
      content = strip_json(JSON.parse(content))
      FileUtils.rm(docs_path)
      f = File.new(docs_path, 'w')
      f.write(JSON.pretty_generate(content))
      f.close
      nil
    rescue Errno::ENOENT
    end
  end

  namespace :yard do
    task :model do
      system("bundle exec yard doc --output-dir #{Rails.root}/doc/models ./app/models")
    end
  end
end


